// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TowBoatSalvageWebApp.Data;

#nullable disable

namespace TowBoatSalvageWebApp.Migrations.SalvageDb
{
    [DbContext(typeof(SalvageDbContext))]
    partial class SalvageDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.5");

            modelBuilder.Entity("TowBoatSalvageWebApp.Models.SalvageCell", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ColumnId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RowId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ColumnId");

                    b.HasIndex("RowId", "ColumnId")
                        .IsUnique();

                    b.ToTable("Cells");
                });

            modelBuilder.Entity("TowBoatSalvageWebApp.Models.SalvageColumn", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Order")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Columns");
                });

            modelBuilder.Entity("TowBoatSalvageWebApp.Models.SalvageFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CellId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("OriginalName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UploadedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CellId");

                    b.ToTable("Files");
                });

            modelBuilder.Entity("TowBoatSalvageWebApp.Models.SalvageRow", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Rows");
                });

            modelBuilder.Entity("TowBoatSalvageWebApp.Models.SalvageCell", b =>
                {
                    b.HasOne("TowBoatSalvageWebApp.Models.SalvageColumn", "Column")
                        .WithMany("Cells")
                        .HasForeignKey("ColumnId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TowBoatSalvageWebApp.Models.SalvageRow", "Row")
                        .WithMany("Cells")
                        .HasForeignKey("RowId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Column");

                    b.Navigation("Row");
                });

            modelBuilder.Entity("TowBoatSalvageWebApp.Models.SalvageFile", b =>
                {
                    b.HasOne("TowBoatSalvageWebApp.Models.SalvageCell", "Cell")
                        .WithMany("Files")
                        .HasForeignKey("CellId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cell");
                });

            modelBuilder.Entity("TowBoatSalvageWebApp.Models.SalvageCell", b =>
                {
                    b.Navigation("Files");
                });

            modelBuilder.Entity("TowBoatSalvageWebApp.Models.SalvageColumn", b =>
                {
                    b.Navigation("Cells");
                });

            modelBuilder.Entity("TowBoatSalvageWebApp.Models.SalvageRow", b =>
                {
                    b.Navigation("Cells");
                });
#pragma warning restore 612, 618
        }
    }
}
